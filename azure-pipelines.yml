# Starter pipeline

# Doxygen download is very slow, cache it for better startup times


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  BUILD_DIR: $(System.ArtifactsDirectory)

stages:
  - stage: Build
    jobs:
      - job: Cortex_Windows
        variables: 
          DEPENDENCY_VERSION: 0.53.0.2
          BOOST_MAJOR_VERSION: 1
          BOOST_MINOR_VERSION: 61
        pool:
          vmImage: 'vs2017-win2016'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '2.7'
              addToPath: true
              architecture: 'x64'
          - script: python -m pip install scons
            displayName: Install Scons
          - task: CacheBeta@0
            inputs:
              key: |
                doxygen.exe
                $(Agent.OS)
              path: 'doxygen.exe'
          - task: CacheBeta@0
            inputs:
              key: |
                doxyindexer.exe
                $(Agent.OS)
              path: 'doxyindexer.exe'
          - task: CacheBeta@0
            inputs:
              key: |
                doxysearch.cgi.exe
                $(Agent.OS)
              path: 'doxysearch.cgi.exe'
          - task: CacheBeta@0
            inputs:
              key: |
                libclang.dll
                $(Agent.OS)
              path: 'libclang.dll'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                if (-not (Test-Path doxygen.exe)) {
                  wget http://doxygen.nl/files/doxygen-1.8.15.windows.x64.bin.zip -OutFile doxygen.zip
                  Expand-Archive -LiteralPath doxygen.zip -DestinationPath .
                }
            displayName: Install Doxygen
          - task: DownloadGitHubRelease@0
            inputs:
              connection: 'ericmehl'
              userRepository: 'hypothetical-inc/gafferDependencies'
              defaultVersionType: 'specificTag'
              version: '$(DEPENDENCY_VERSION)'
              itemPattern: 'gafferDependencies-$(DEPENDENCY_VERSION)-windows-msvc2017.zip'
              downloadPath: '$(BUILD_DIR)'
              displayName: 'Download Dependencies'
          - script: |
              cd $(BUILD_DIR)
              7z x gafferDependencies-$(DEPENDENCY_VERSION)-windows-msvc2017.zip -aoa -y
              cd $(Build.SourcesDirectory)
            displayName: Expand Dependencies
          - script: dir $(BUILD_DIR)\include\boost-1_61
          - script: dir $(BUILD_DIR)\include\boost-1_61\boost
          - script: dir $(BUILD_DIR)\lib
          - task: BatchScript@1
            inputs:
              filename: config\azure\buildWindows.bat
            displayName: Build Cortex
          - publish: $(BUILD_DIR)/**
            artifact: Cortex-Windows
